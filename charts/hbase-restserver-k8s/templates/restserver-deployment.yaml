# A headless service to create DNS records.
apiVersion: v1
kind: Service
metadata:
  name: {{ template "hbase-k8s.restserver.fullname" . }}
  labels:
    app: {{ template "hbase-k8s.restserver.name" . }}
    chart: {{ template "hbase-k8s.subchart" . }}
    release: {{ .Release.Name }}
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - port: 8080
      name: restapi
  clusterIP: None
  selector:
    app: {{ template "hbase-k8s.restserver.name" . }}
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "hbase-k8s.restserver.fullname" . }}
  labels:
    app: {{ template "hbase-k8s.restserver.name" . }}
    chart: {{ template "hbase-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "hbase-k8s.restserver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hbase-k8s.restserver.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      containers:
        - name: hbase-restserver
          image: pierrezemb/hbase-docker:distributed-1.3.1-hadoop-2.7.3
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
            - name: HBASE_CUSTOM_CONF_DIR
              value: /etc/hbase-custom-conf
            - name: MY_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ['/bin/sh', '-c']
          args:
            - /etc/hbase-custom-conf/bootstrap.sh
          ports:
            - containerPort: 8080
              name: restapi
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 30
          volumeMounts:
            - name: hbase-config
              mountPath: /etc/hbase-custom-conf
              readOnly: true
            - name: hdfs-config
              mountPath: /etc/hadoop-custom-conf
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: hbase-config
          configMap:
            name: {{ template "hbase-k8s.config.fullname" . }}
            defaultMode: 0744
        - name: hdfs-config
          configMap:
            name: {{ template "hdfs-k8s.config.fullname" . }}
      {{- if .Values.global.podSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.global.podSecurityContext.runAsUser }}
        fsGroup: {{ .Values.global.podSecurityContext.fsGroup }}
  {{- end }}
