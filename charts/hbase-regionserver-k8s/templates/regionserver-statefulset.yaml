# A headless service to create DNS records.
apiVersion: v1
kind: Service
metadata:
  name: {{ template "hbase-k8s.regionserver.fullname" . }}
  labels:
    app: {{ template "hbase-k8s.regionserver.name" . }}
    chart: {{ template "hbase-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  ports:
    - port: 16020
      name: rs
    - port: 16030
      name: rsinfo
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app: {{ template "hbase-k8s.regionserver.name" . }}
    release: {{ .Release.Name }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ template "hbase-k8s.regionserver.fullname" . }}
  labels:
    app: {{ template "hbase-k8s.regionserver.name" . }}
    chart: {{ template "hbase-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "hbase-k8s.regionserver.name" . }}
      release: {{ .Release.Name }}
  minAvailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hbase-k8s.regionserver.fullname" . }}
  labels:
    app: {{ template "hbase-k8s.regionserver.name" . }}
    chart: {{ template "hbase-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  serviceName: {{ template "hbase-k8s.regionserver.fullname" . }}
  replicas: {{ .Values.global.regionserverQuorumSize }}
  selector:
    matchLabels:
      app: {{ template "hbase-k8s.regionserver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hbase-k8s.regionserver.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    {{- end }}
    spec:
      {{- if .Values.global.hostNetworkEnabled }}
      # Use hostNetwork so datanodes connect to namenode without going through an overlay network
      # like weave. Otherwise, namenode fails to see physical IP address of datanodes.
      # Disabling this will break data locality as namenode will see pod virtual IPs and fails to
      # equate them with cluster node physical IPs associated with data nodes.
      # We currently disable this only for CI on minikube.
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- else }}
      dnsPolicy: ClusterFirst
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- else if .Values.global.defaultAffinityEnabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - {{ template "hbase-k8s.regionserver.name" . }}
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
        - name: hbase-regionserver
          image: pierrezemb/hbase-docker:distributed-1.3.1-hadoop-2.7.3
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
            - name: HBASE_CUSTOM_CONF_DIR
              value: /etc/hbase-custom-conf
            # Used by the start script below.
            - name: MY_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ['/bin/sh', '-c']
          # The start script is provided by a config map.
          args:
            - /etc/hbase-custom-conf/bootstrap.sh
          ports:
            - containerPort: 16020
              name: rs
            - containerPort: 16030
              name: rsinfo
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: 16030
            initialDelaySeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /
              port: 16030
            initialDelaySeconds: 60
            timeoutSeconds: 30
          volumeMounts:
            - name: hbase-config
              mountPath: /etc/hbase-custom-conf
              readOnly: true
            - name: hdfs-config
              mountPath: /etc/hadoop-custom-conf
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: hbase-config
          configMap:
            name: {{ template "hbase-k8s.config.fullname" . }}
            defaultMode: 0744
        - name: hdfs-config
          configMap:
            name: {{ template "hdfs-k8s.config.fullname" . }}
      {{- if .Values.global.podSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.global.podSecurityContext.runAsUser }}
        fsGroup: {{ .Values.global.podSecurityContext.fsGroup }}
  {{- end }}
